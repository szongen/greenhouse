/********************************************************************************************************************************************
*                                                                                                                                           *
*                ---------------------------------以下是模块的修改记录区---------------------------------                                   *
*                                                                                                                                           *
********************************************************************************************************************************************/
/***********************************************
 * 内容：按键
 * 日期：2016/9/29
 * 作者：陈勇
 * 版本号：V1.0（初版）
 ***********************************************
 * 修改内容：
 * 修改日期：
 * 修改作者：
 * 版本号：
 ***********************************************/


/********************************************************************************************************************************************
*                                                                                                                                           *
*                ---------------------------------以下是模块的使用说明区---------------------------------                                   *
*                                                                                                                                           *
********************************************************************************************************************************************/
/*                                           模块使用说明：
 *
 * 该模块是按键模块，使用步骤如下：
 * 1.在"APP_U_Key.c"文件里的"APP_Key_Init"函数内配置按键相关IO口，并放在项目主循环之前。（如果在扫描按键过程中需要频繁改变IO口方向的话就跳过该步）
 * 2.在"APP_U_Key.h"文件里自定义按键名和IO口名。
 * 3.在"APP_U_Key.c"文件里的"Key_CurrentTime_ms"、"Key_TimingQuery_30ms"、"Key_TimingQuery_3s"三个函数内编写定时代码。
 * 4.在"APP_U_Key.c"文件里的"Key_Check"函数内编写按键扫描代码。
 * 5.在"APP_U_Key.c"文件里的"Key_Task"函数内编写按键任务代码。
 * 6.将"APP_Key_Scanning"函数放在项目主循环里，如果分配成分时任务就要与"APP_Key_CurrentState"函数配合工作，如果是实时任务就可以单独工作。
 *
 */
#ifndef __APP_S_Key_h__
#define	__APP_S_Key_h__

typedef volatile unsigned char vu8;
/********************************************************************************************************************************************
*                                                                                                                                           *
*                ---------------------------------以下是模块的初始化定义区---------------------------------                                 *
*                                                                                                                                           *
********************************************************************************************************************************************/
#define PressDown    0  //按下
#define NoPressDown  1  //没按

#define SharedTask          0  //共同任务
#define PressDownOnce       1  //点动
#define PressDownStabilize  2  //常按

#define AwaitOrders               0  //待机
#define PressDownDispelDithering  1  //按下去抖
#define CheckPressDownMode        2  //检测按下方式
#define WaitUnclinch              3  //等待弹开
#define UnclinchDispelDithering   4  //弹开去抖

#define NoTimeOut  0  //时间还没到
#define TimeOut    1  //时间到

#define Free  0  //空闲
#define Busy  1  //忙碌

#define HangInTheAir      0  //按键任务未执行完成
#define HasBeenCompleted  1  //按键任务已执行完成


extern vu8 KeyStatus;  //按键当前的工作状态


/********************************************************************************************************************************************
*                                                                                                                                           *
*                ---------------------------------以下是模块的系统函数代码区---------------------------------                               *
*                                                                                                                                           *
********************************************************************************************************************************************/
/***************************************************************************
* 函数名：  APP_Key_Scanning
* 功能描述：按键扫描
* 入口参数：无
* 出口参数：无
* 注意事项：该函数必须放在项目主循环内，当按键模块被分配成分时任务的情况下需
*           要配合"APP_Key_CurrentState"函数一起工作，如果不是按键模块工作的
*           时段检测出按键模块处于忙碌状态的话，那么就要让按键模块一直工作到
*           空闲状态为止，出现这种情况是因为按键模块在自己的工作时段还未完成
*           任务就超出了时段，所以就算是跨时段工作也要让它把剩余的工作完成，
*           如果分配成实时任务的话就可以单独工作。
* 修改记录：无
*           2016/9/29 BY:陈勇
***************************************************************************/
extern void APP_Key_Scanning(void);


/***************************************************************************
* 函数名：  APP_Key_CurrentState
* 功能描述：按键模块的当前状态
* 入口参数：无
* 出口参数：Free：当前按键模块处于空闲状态
*           Busy：当前按键模块处于忙碌状态
* 注意事项：当按键模块被分配成分时任务的情况下才需要该函数配合"APP_Key_Scanning"
*           函数一起工作，如果不是按键模块工作的时段检测出按键模块处于忙碌状
*           态的话，那么就要让按键模块一直工作到空闲状态为止，出现这种情况是
*           因为按键模块在自己的工作时段还未完成任务就超出了时段，所以就算是
*           跨时段工作也要让它把剩余的工作完成，如果分配成实时任务的话就可以
*           让"APP_Key_Scanning"函数单独工作，不需要该函数。
* 修改记录：无
*           2016/9/29 BY:陈勇
***************************************************************************/
extern u8 APP_Key_CurrentState(void);


/********************************************************************************************************************************************
*                                                                                                                                           *
*               ---------------------------------以下是模块的用户函数代码区---------------------------------                                *
*                                                                                                                                           *
********************************************************************************************************************************************/
/***************************************************************************
* 函数名：  APP_Key_Init
* 功能描述：按键模块初始化
* 入口参数：无
* 出口参数：无
* 注意事项：配置与按键相关的IO口，如果在扫描按键过程中IO口要频繁地改变方向的
*           话（如：塔型按键扫描），就要把IO口配置写在"Key_Check"函数中，不
*           用理睬该函数，如果有用到该函数则必须放在主循环之前。
* 修改记录：无
*           2016/9/29 BY:陈勇
***************************************************************************/
extern void APP_Key_Init(void);


#endif
